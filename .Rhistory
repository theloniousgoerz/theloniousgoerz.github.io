getwd()
getwd
getwd()
# 01 Load Packages
library(ggplot2)
library(tidyverse)
library(magrittr)
# 02 Set Seed
set.seed(2)
# 03 Generate data
X = rnorm(n = 1000, mean = 15, sd = 30)
Z = rnorm(n = 1000, mean = 40, sd = 30)
W = rnorm(n = 1000, mean = 60, sd = 30)
Y = rnorm(n = 1000, mean = 100, sd = 30)
Mat = data.frame(cbind(X,Z,W,Y))
Mat %<>%
pivot_longer(cols = c(X,Z,W,Y),
names_to = "Density",values_to = "Var")
plot <- ggplot(Mat,aes(log(Var), col = Density)) +
geom_density(size = 1.2,
adjust =10) +
theme_minimal() +
theme(panel.grid.major = element_blank()
# ,
# panel.grid.minor = element_blank()
, legend.position = "none",
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()) +
scale_color_brewer(palette="Set4")
ggsave(plot, filename = "/Users/theloniousgoerz/Academic/Professional/website/theloniousgoerz.github.io/images/logo.jpeg")
?ggsave
ggsave(plot, filename = "/Users/theloniousgoerz/Academic/Professional/website/theloniousgoerz.github.io/images/logo.jpeg",
width = 16, height = 16)
ggsave(plot, filename = "/Users/theloniousgoerz/Academic/Professional/logo.jpeg",
width = 1500, height = 500,units = "px")
plot <- ggplot(Mat,aes(log(Var), col = Density)) +
geom_density(size = 1.2,
adjust =10) +
theme_minimal() +
theme(panel.grid.major = element_blank()
,
panel.grid.minor = element_blank()
, legend.position = "none",
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank()) +
scale_color_brewer(palette="Set4")
plot
ggsave(plot, filename = "/Users/theloniousgoerz/Academic/Professional/logo.jpeg",
width = 1500, height = 500,units = "px")
rm(list = ls())
library(tidyverse)
library(MatchIt)
library(haven)
library(readxl)
library(skimr)
library(tidyverse)
library(MatchIt)
library(haven)
library(readxl)
match_data_clean <- read_dta("/Volumes/DELUCA-RA/GERMANNA/SAMPLING/Fall 2021/Additional-sampling/match-data-clean.dta")
match_data_clean <- read_dta("/Volumes/DELUCA-RA/GERMANNA/SAMPLING/Output/Fall 2021/Additional-sampling/match-data-clean.dta")
match_data_clean <- read_dta("/Volumes/deluca-ra/GERMANNA/SAMPLING/Fall 2021/Additional-sampling/Output/match-data-clean.dta")
Contact_Information <- read_excel("/Volumes/DELUCA-RA/GERMANNA/Interviews/_RECRUITMENT/Contact Information (original sample).xlsx")
Contact_Information <- read_excel("/Volumes/deluca-ra/GERMANNA/INTERVIEWS/_RECRUITMENT/DATA/Contact Information (original sample).xlsx")
skim(match_data_clean)
ID <- Contact_Information %>% select(`PIRL ID`,emplid)
ID$emplid <- as.numeric(ID$emplid)
match_data_clean <- left_join(match_data_clean,ID, by = "emplid")
ID_list = match_data_clean %>% filter(in_sample == 1)
match_data_clean <- match_data_clean %>% mutate(`PIRL ID` = ifelse(is.na(`PIRL ID`),row_number(),`PIRL ID`))
# Look at the balance of the data pre-match.
# Fix rowname labels
rownames(match_data_clean) <- match_data_clean$`PIRL ID`
null_match <- matchit(in_sample~race_white +
race_black + race_hispanic +
gender_male +gender_female + aid + pellell+
finaidspring21 + pellell +  transfercred  +
hs_gradyear + in_state + cumulativegpa +
currentgpa + credtakenspr21 + credpassedspr21 + sapstatus2 +  associates +  age,
distance = "glm", data = match_data_clean)
MDM <- matchit(in_sample~pellell +   # Include these first in order because the nearest method selects based on
race_black +
race_white +
race_hispanic +
gender_male + gender_female + aid + pellell+
finaidspring21  +  transfercred  +
hs_gradyear + in_state + cumulativegpa +
currentgpa + credtakenspr21 + credpassedspr21 +
sapstatus2 +
associates +
age,
distance = "mahalanobis", # Mahalanobis distance.
data = match_data_clean, # Data
method = "nearest",
ratio =2, # Specify number of match sets.
exact = c(
"race_white",
"race_black",
"race_hispanic",
"gender_male",
"gender_female",
"aid",
"pellell"))
summary(MDM)
rm(list=ls())
# Simulate Data.
ID = seq_along(1:1000, 1)
?seq_along
# Simulate Data.
ID = seq_along(from = 1, to = 1000, by = 1)
# Simulate Data.
ID = seq.int(from = 1, to = 1000, by = 1)
Treatment = runif(n = 1000, min = 0, max = 1)
Race <- c(rep("White",0.1*10000),rep("Black",0.2*10000),rep("Asian",0.65*10000),rep("Hispanic",0.05*10000))
Race <- c(rep("White",0.1*100000),rep("Black",0.2*100000),rep("Asian",0.65*100000),rep("Hispanic",0.05*100000))
sample(Race, 1000)
set.seed(2)
Race = sample(Race, 1000)
PellEll = c(rep("Eligible",0.36*1000),rep("Ineligible",.64*1000))
PellEll = sample(PellEll, 1000)
Gender = c(rep("Male",0.5*10000),rep("Female",0.5*10000))
Gender = sample(Gender, 1000)
Income = rnorm(n = 1000, mean = 58000, sd = 6000)
Treatment = ifelse(Treatment > .8,1,0)
cbind(ID,
Treatment,
Race,
PellEll,
Gender,
Income)
Data = cbind(ID,
Treatment,
Race,
PellEll,
Gender,
Income)
summary(Data)
View(Data)
Data = data.frame(ID,
Treatment,
Race,
PellEll,
Gender,
Income)
summary(Data)
# Summary Statistics
Data %>%
group_by(ID) %>%
summarise(n())
# Summary Statistics
Data %>%
group_by(ID) %>%
summarise(n(Race))
# Summary Statistics
Data %>%
group_by(ID) %>%
summarise(count(Race))
# Summary Statistics
Data %>%
group_by(ID,Race) %>%
summarise(n())
# Summary Statistics
Data %>%
group_by(ID,Race) %>%
summarise(mean(Income))
# Summary Statistics
Data %>%
group_by(ID) %>%
summarise(mean(Income))
# Summary Statistics
Data %>%
group_by(Treatment) %>%
summarise(mean(Income))
Treatment = ifelse(Treatment > .8 | Treatment >= .3 & Treatment <.4,1,0)
Data = data.frame(ID,
Treatment,
Race,
PellEll,
Gender,
Income)
# Summary Statistics
Data %>%
group_by(Treatment) %>%
summarise(mean(Income))
---------------------
set.seed(2)
# ---------------------------
set.seed(2)
ID = seq.int(from = 1, to = 1000, by = 1)
Treatment = runif(n = 1000, min = 0, max = 1)
Treatment = ifelse(Treatment > .8 | Treatment >= .3 & Treatment <.4,1,0)
Race <- c(rep("White",0.1*10000),rep("Black",0.2*10000),rep("Asian",0.65*10000),rep("Hispanic",0.05*10000))
Race = sample(Race, 1000)
PellEll = c(rep("Eligible",0.36*1000),rep("Ineligible",.64*1000))
PellEll = sample(PellEll, 1000)
Gender = c(rep("Male",0.5*10000),rep("Female",0.5*10000))
Gender = sample(Gender, 1000)
Income = rnorm(n = 1000, mean = 58000, sd = 6000)
Data = data.frame(ID,
Treatment,
Race,
PellEll,
Gender,
Income)
# Summary Statistics
Data %>%
group_by(Treatment) %>%
summarise(mean(Income))
# Summary Statistics
Data %>%
group_by(Treatment) %>%
summarise(mean(Income))
Data %>%
mutate(NonPellBM = ifelse(Treatment == 1 & Gender == "Male" & Race == "Black" & PellEll == "Eligible",1,0))
Data %>%
mutate(NonPellBM = ifelse(Treatment == 1 & Gender == "Male" & Race == "Black" & PellEll == "Ineligible",1,0)) %>%
group_by(NonPellBM) %>%
summarise(mean(Income))
Data %>%
mutate(NonPellBM = ifelse(Treatment == 1 & Gender == "Male" & Race == "Black" & PellEll == "Ineligible",1,0)) %>%
group_by(NonPellBM) %>%
summarise(mean(Income),
min(Income),max(Income))
Data %>%
mutate(NonPellBM = ifelse(Treatment == 1 & Gender == "Male" & Race == "Black" & PellEll == "Ineligible",1,0)) %>%
group_by(NonPellBM) %>%
summarise(Mu = mean(Income),
Minimum = min(Income),Maximum = max(Income))
Data %>%
mutate(NonPellBM = ifelse(Treatment == 1 & Gender == "Male" & Race == "Black" & PellEll == "Ineligible","Non Pell Eligible Black Male","Pell Eligible Black Male")) %>%
group_by(NonPellBM) %>%
summarise(Mu = mean(Income),
Minimum = min(Income),Maximum = max(Income))
Data %>%
mutate(NonPellBM = ifelse(Treatment == 1 & Gender == "Male" & Race == "Black" & PellEll == "Ineligible","Non Pell Eligible Black Male","Pell Eligible Black Male")) %>%
group_by(NonPellBM) %>%
summarise(Mu = mean(Income),
Minimum = min(Income),Maximum = max(Income)) %>% kable()
Data %>%
mutate(NonPellBM = ifelse(Treatment == 1 & Gender == "Male" & Race == "Black" & PellEll == "Ineligible","Non Pell Eligible Black Male","Pell Eligible Black Male")) %>%
group_by(NonPellBM) %>%
summarise(Mu = mean(Income),
Minimum = min(Income),Maximum = max(Income)) %>% kable::kable()
Data %>%
mutate(NonPellBM = ifelse(Treatment == 1 & Gender == "Male" & Race == "Black" & PellEll == "Ineligible","Non Pell Eligible Black Male","Pell Eligible Black Male")) %>%
group_by(NonPellBM) %>%
summarise(Mu = mean(Income),
Minimum = min(Income),Maximum = max(Income))
# Test a match with GLM distance.
null_match <- matchit(Treatment~ .,
distance = "glm", data = Data)
summary(null_match)
MDM <- matchit(Treatment~Race+
# Include these first in order because the nearest method selects based on order
Gender+
PellEll +
Income,
distance = "mahalanobis", # Mahalanobis distance.
data = match_data_clean, # Data
method = "nearest",
ratio =2, # Specify number of match sets.
exact = c(
"race_white",
"race_black",
"race_hispanic",
"gender_male",
"gender_female",
"aid",
"pellell"))
MDM <- matchit(Treatment~Race+
# Include these first in order because the nearest method selects based on order
Gender+
PellEll +
Income,
distance = "mahalanobis", # Mahalanobis distance.
data = match_data_clean, # Data
method = "nearest",
exact = c("Race","Gender"))
MDM <- matchit(Treatment~Race+
# Include these first in order because the nearest method selects based on order
Gender+
PellEll +
Income,
distance = "mahalanobis", # Mahalanobis distance.
data = Data, # Data
method = "nearest",
exact = c("Race","Gender"))
summary(MDM)
plot(MDM, type = "density", interactive = FALSE)
plot(summary(MDM))
plot(summary(null_match))
# Test a match with GLM distance.
null_match <- matchit(Treatment~ .,
distance = "glm", link = "probit" data = Data)
# Test a match with GLM distance.
null_match <- matchit(Treatment~ .,
distance = "glm", link = "probit", data = Data)
plot(summary(null_match))
vignette("assessing-balance")
plot(summary(null_match))
getwd()
plot(summary(null_match)) %>%
ggsave(path = "/Users/theloniousgoerz/Academic/Professional/website/_images/GLMMatch.png")
Image <- plot(summary(null_match))
Image <- plot(summary(null_match))
View(Image)
getwd()
![Figure 1](./images/Posts/GLMMatch.png)
